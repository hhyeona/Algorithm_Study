'''
문자열 S가 주어졌을 때, 이 문자열에서 단어만 뒤집으려고 한다.
먼저, 문자열 S는 아래와과 같은 규칙을 지킨다.
알파벳 소문자('a'-'z'), 숫자('0'-'9'), 공백(' '), 특수 문자('<', '>')로만 이루어져 있다.
문자열의 시작과 끝은 공백이 아니다.
'<'와 '>'가 문자열에 있는 경우 번갈아가면서 등장하며, '<'이 먼저 등장한다. 또, 두 문자의 개수는 같다.
태그는 '<'로 시작해서 '>'로 끝나는 길이가 3 이상인 부분 문자열이고, '<'와 '>' 사이에는 알파벳 소문자와 공백만 있다. 단어는 알파벳 소문자와 숫자로 이루어진 부분 문자열이고, 연속하는 두 단어는 공백 하나로 구분한다. 태그는 단어가 아니며, 태그와 단어 사이에는 공백이 없다.

입력
첫째 줄에 문자열 S가 주어진다. S의 길이는 100,000 이하이다.
baekjoon online judge
<open>tag<close>
출력
첫째 줄에 문자열 S의 단어를 뒤집어서 출력한다.
noojkeab enilno egduj
<open>gat<close>
1. 문자열이 소문자, 숫자, 공백, 특수문자가 있다.
2. 다들 input 으로 받고,
3. < 랑 > 만나면 그 사이 문자열은 냅두고, > < 이 사이에 있는 것만 뒤집기
4. 공백을 기준으로 나눠야 함. (이 걸 찾아보자) split() 이면 되는 건가.
5. 거꾸로 for (N-1) 로 불러서 하나씩 리스트에 나열하면 될 듯.(no)
6. pop 쓰면 간단함.

나열 된 단어를 하나 꺼내고, 뒤집고, 그 다음 단어 꺼내서 뒤집고, 가능?

'''
# 문자열, 입력 받고, 특수문자, 공백, 숫자
S = input()

temp = ''
ans = ''

for i in S:
    if i == ' ':
        if '<' not in temp:
            ans += temp[::-1] + i
            temp = ''
        else:
            temp += i

    elif i == '<':
        ans += temp[::-1]
        temp = ''
        temp += i

    elif i == '>':
        ans += temp + i
        temp = ''
    else:
        temp += i

ans += temp[::-1]

print(ans)




